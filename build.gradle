buildscript {
    repositories {
        gradlePluginPortal()
        maven { url 'https://repo.spring.io/release' }
    }

    dependencies {
        // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-gradle-plugin
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.6.1'
        // https://mvnrepository.com/artifact/org.springframework.experimental.aot/org.springframework.experimental.aot.gradle.plugin
        classpath 'org.springframework.experimental.aot:org.springframework.experimental.aot.gradle.plugin:0.11.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.experimental.aot'

group 'org.example'
version '1.0.0'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
}

//kotlin
dependencies {
    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib-jdk8
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
    // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-reflect
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
}

//spring
dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

//native build config
graalvmNative.binaries.main {
    javaLauncher = javaToolchains.launcherFor {
        //if you donâ€™t run Gradle itself with GraalVM, set toolchain version to current JDK, and don't forget to setup GRAALVM_HOME environment variable
        languageVersion = JavaLanguageVersion.of(JavaVersion.current().majorVersion)
    }
}
